<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.cqupt.mapper.RoleMapper">

<resultMap type="role" id="roleMapper">
<constructor>
<idArg column="id" javaType="long"/>
<arg column="roleName" javaType="string"/>
</constructor>
 <result column="note" property="note"/>
</resultMap>

<sql id="roleCols">
id,role_name as roleName,note
</sql>
 
 <!-- 
 <sql id="roleCols">
 ${alias}.id,${alias}.role_name,${alias}.note
 </sql>
  -->

<select id="findByRowBounds" resultType="role" resultMap="roleMapper">
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role r where role_name like concat('%',#{roleName},'%')
and note like concat('%',#{note},'%')
</select>

<select id="findRolesByMix" resultType="role" resultMap="roleMapper">
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role r where role_name like concat('%',#{roleName},'%')
and note like concat('%',#{note},'%') limit #{page.start},#{page.limit}
</select>

<select id="findRolesByBean"  parameterType="roleParams" resultMap="roleMapper">
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role r where role_name like concat('%',#{roleName},'%')
and note like concat('%',#{note},'%')
</select>

<select id="findRolesByAnnotation" resultType="role" resultMap="roleMapper">
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role where role_name r like concat('%',#{roleName},'%')
and note like concat('%',#{note},'%')
</select>

<select id="findRolesByMap" parameterType="map" resultType="role" resultMap="roleMapper">
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role r where role_name like concat('%',#{roleName},'%')
and note like concat('%',#{note},'%')
</select>

<!-- 自动映射 -->
<select id="getRole" parameterType="Long" resultType="role" resultMap="roleMapper" >
select <include refid="roleCols"><property name="alias" value="r"/></include> from t_role r where id = #{id}
</select>

<insert id="insertRole" parameterType="role" >
<selectKey keyProperty="id" resultType="long" order="BEFORE">
select if(max(id)=null,1,max(id)+1) from t_role
</selectKey>
insert into t_role(id,role_name,note) values(#{id},#{roleName},#{note})
</insert>

<delete id="deleteRole" parameterType="Long">
delete from t_role where id=#{id}
</delete>

<update id="updateRole" parameterType="role">
update t_role set role_name = #{roleName},note=#{note} where id = #{id}
</update>

<select id="findRoles" parameterType="String" resultType="role"  resultMap="roleMapper">
select id,role_name as roleName,note from t_role where role_name like concat('%',#{roleName},'%')
</select>

<parameterMap type="pdCountRoleParams" id="count">
<parameter property="roleName" jdbcType="VARCHAR" mode="IN"/>
<parameter property="total" jdbcType="INTEGER" mode="OUT"/>
<parameter property="execDate" jdbcType="DATE" mode="OUT"/>
</parameterMap>

<select id="countRole" parameterType="pdCountRoleParams"   statementType="CALLABLE">
{call count_role(
#{roleName,mode=IN,jdbcType=VARCHAR},
#{total,mode=OUT,jdbcType=INTEGER},
#{execDate,mode=OUT,jdbcType=DATE}
)}
</select>

<!-- 
<cache></cache>
 -->
</mapper>
